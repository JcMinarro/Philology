defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-28
  environment:
    TZ: Europe/Madrid
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: '-Dorg.gradle.daemon=false'
    _JAVA_OPTIONS: "-Xms256m -Xmx1280m -XX:MaxPermSize=350m"

configure_gradle: &configure_gradle
  name: Configure Gradle Properties
  command: |
    mkdir -p ~/.gradle
    touch ~/.gradle/gradle.properties
    echo "org.gradle.daemon=false" > ~/.gradle/gradle.properties
    echo "org.gradle.jvmargs=-Xmx1536m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError" >> ~/.gradle/gradle.properties
download_gradle_dependencies: &download_gradle_dependencies
  name: Download dependencies
  command: ./gradlew prefetchDependencies dependencies :philology:dependencies sample:dependencies
restore_cache: &restore_cache
  key: jars--{{ checksum "build.gradle" }}-{{ checksum  "philology/build.gradle" }}-{{ checksum  "sample/build.gradle" }}-{{ checksum  "buildSrc/src/main/groovy/com/jcminarro/Dependencies.groovy" }}
save_cache: &save_cache
  paths:
    - ~/.gradle
  key: jars--{{ checksum "build.gradle" }}-{{ checksum  "philology/build.gradle" }}-{{ checksum  "sample/build.gradle" }}-{{ checksum  "buildSrc/src/main/groovy/com/jcminarro/Dependencies.groovy" }}

version: 2
jobs:
  build_philology:
    <<: *defaults
    steps:
      - checkout
      - run: *configure_gradle
      - restore_cache: *restore_cache
      - run: *download_gradle_dependencies
      - save_cache: *save_cache
      - run:
          name: Build Philology lib
          command: ./gradlew philology:assemble --stacktrace -PdisablePreDex
      - store_artifacts:
          path: philology/build/outputs/
          destination: artifacts
      - persist_to_workspace:
          root: .
          paths:
            - buildSrc/build
            - build
            - philology/build

  test_philology:
    <<: *defaults
    steps:
      - checkout
      - run: *configure_gradle
      - restore_cache: *restore_cache
      - run: *download_gradle_dependencies
      - save_cache: *save_cache
      - attach_workspace:
          at: .
      - run:
          name: Test Philology lib
          command: ./gradlew philology:test --stacktrace -PdisablePreDex
      - store_artifacts:
          path: philology/build/reports
          destination: reports
      - store_test_results:
          path: philology/build/test-results

  lint_philology:
    <<: *defaults
    steps:
      - checkout
      - run: *configure_gradle
      - restore_cache: *restore_cache
      - run: *download_gradle_dependencies
      - save_cache: *save_cache
      - attach_workspace:
          at: .
      - run:
          name: Run lint Philology lib
          command: ./gradlew philology:lint --stacktrace -PdisablePreDex
      - store_artifacts:
          path: philology/build/reports
          destination: reports

  build_sample:
    <<: *defaults
    steps:
      - checkout
      - run: *configure_gradle
      - restore_cache: *restore_cache
      - run: *download_gradle_dependencies
      - save_cache: *save_cache
      - attach_workspace:
          at: .
      - run:
          name: Build Philology sample
          command: ./gradlew sample:assemble --stacktrace -PdisablePreDex
      - store_artifacts:
          path: sample/build/outputs/apk/
          destination: apks

  deploy_philology:
    <<: *defaults
    steps:
      - checkout
      - run: *configure_gradle
      - restore_cache: *restore_cache
      - run: *download_gradle_dependencies
      - save_cache: *save_cache
      - attach_workspace:
          at: .
      - run:
          name: Deploy Philology lib
          command: ./gradlew philology:uploadArchives -PBINTRAY_API_KEY=$BINTRAY_API_KEY -PBINTRAY_USER=$BINTRAY_USER --stacktrace -PdisablePreDex
      - store_artifacts:
          path: philology/build/reports
          destination: reports
      - store_test_results:
          path: philology/build/test-results

workflows:
  version: 2
  test_and_build:
    jobs:
      - build_philology
      - test_philology:
          requires:
            - build_philology
      - lint_philology:
          requires:
            - build_philology
      - build_sample:
          requires:
            - build_philology
      - deploy_philology:
          requires:
            - lint_philology
            - test_philology
          filters:
            branches:
              only:
                - master